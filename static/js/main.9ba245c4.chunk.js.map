{"version":3,"sources":["assets/logo.svg","pages/Home/index.js","services/api.ts","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","ufs","setUfs","selectedUf","setSelectedUf","cities","setCities","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","initialPosition","setInitialPosition","selectedItems","setSelectedItems","name","email","whatsapp","formData","setFormData","history","useHistory","handleInputChange","event","target","value","a","preventDefault","uf","city","latitude","longitude","data","post","alert","push","useEffect","get","then","response","ufInitials","map","sigla","cityNames","nome","navigator","geolocation","getCurrentPosition","position","coords","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","findIndex","filteredItems","filter","handleSelectItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ba245c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react'\r\nimport logo from '../../assets/logo.svg'\r\nimport { FiLogIn } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\"/>\r\n                </header>\r\n\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de res√≠duos</h1>\r\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma efeiciente</p>\r\n\r\n                <Link to=\"/create-point\">\r\n                    <span>\r\n                        <FiLogIn />\r\n                    </span>\r\n                    <strong>Cadastre um ponto de coleta</strong>\r\n                </Link>\r\n\r\n                </main>        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'hhtp://localhost:3333'\r\n})\r\n\r\nexport default api","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react'\r\nimport './styles.css'\r\nimport logo from '../../assets/logo.svg'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FiArrowDownLeft } from 'react-icons/fi'\r\nimport { Map, TileLayer, Marker} from 'react-leaflet'\r\nimport api from '../../services/api'\r\nimport axios from 'axios'\r\nimport { LeafletMouseEvent } from 'leaflet'\r\n\r\ninterface Item{\r\n    id: number\r\n    title: string\r\n    image_url: string\r\n}\r\n\r\ninterface IBGEUFResponse{\r\n    sigla: string\r\n}\r\n\r\ninterface IBGECityResponse{\r\n    nome: string\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [ufs, setUfs] = useState<string[]>([])\r\n    const [selectedUf, setSelectedUf] = useState('0')\r\n    const [cities, setCities] = useState<string[]>([])\r\n    const [selectedCity, setSelectedCity] = useState('0')\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0])\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0,0])\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([])\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: ''\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        api.get('items')\r\n            .then(response => {  \r\n                setItems(response.data) \r\n            })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n            .then(response => {  \r\n               const ufInitials = response.data.map(uf => uf.sigla)\r\n               setUfs(ufInitials)\r\n            })\r\n    })\r\n\r\n    useEffect(()=>{\r\n       if(selectedUf === '0'){\r\n           return\r\n       }\r\n      \r\n       axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n       .then(response => {  \r\n          const cityNames = response.data.map(city => city.nome)\r\n          setCities(cityNames)\r\n       })\r\n\r\n    }, [selectedUf])\r\n\r\n    useEffect(()=>{\r\n        navigator.geolocation.getCurrentPosition( position => {\r\n            const { latitude, longitude } = position.coords\r\n            setInitialPosition([latitude, longitude])\r\n        })\r\n    },[])\r\n\r\n    function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>){\r\n        const uf = event.target.value\r\n        setSelectedUf(uf)\r\n    }\r\n\r\n    function handleSelectedcity(event: ChangeEvent<HTMLSelectElement>){\r\n        const city = event.target.value\r\n        setSelectedCity(city)\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n       setSelectedPosition([\r\n           event.latlng.lat,\r\n           event.latlng.lng\r\n       ])\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const { name, value } = event.target\r\n\r\n        setFormData({\r\n            ...formData, [name]: value\r\n        })\r\n    }\r\n\r\n    function handleSelectItem(id: number){\r\n        \r\n        const  alreadySelected = selectedItems.findIndex(item => item === id)\r\n        \r\n        if(alreadySelected >=0){\r\n            const filteredItems = selectedItems.filter(item => item !== id)\r\n            setSelectedItems(filteredItems)\r\n        }else{\r\n\r\n            setSelectedItems([...selectedItems, id])\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n\r\n        event.preventDefault()\r\n\r\n        const { name, email, whatsapp } = formData\r\n        const uf = selectedUf\r\n        const city = selectedCity\r\n        const [latitude, longitude] = selectedPosition\r\n        const items = selectedItems\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            uf,\r\n            city,\r\n            latitude, \r\n            longitude,\r\n            items\r\n        }\r\n\r\n        await api.post('points', data)\r\n        alert('Ponto de coleta criado!')\r\n        history.push('/')  \r\n    }\r\n\r\n    return(\r\n       <div id=\"page-create-point\">\r\n           <header> \r\n               <img src={logo} alt=\"Ecoleta\"/>\r\n            <Link to=\"/\">\r\n                <FiArrowDownLeft />\r\n                Voltar para Home\r\n            </Link>\r\n           </header>\r\n\r\n           <form onSubmit={handleSubmit}>\r\n               <h1>Cadastro do <br /> ponto de coleta</h1>\r\n\r\n               <fieldset>\r\n                   <legend>\r\n                       <h2>Dados</h2>\r\n                   </legend>\r\n               \r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\" \r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">E-mail</label>\r\n                            <input \r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\" \r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div> \r\n                        \r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">WhatsApp</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"whatsapp\"\r\n                                id=\"whatsapp\" \r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n               </fieldset>\r\n               \r\n               <fieldset>\r\n                   <legend>\r\n                       <h2>Endere√ßo</h2>\r\n                       <span>Selecione o endere√ßo no mapa</span>\r\n                   </legend>\r\n\r\n                   <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n                   <TileLayer\r\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={selectedPosition} />\r\n                   </Map>\r\n\r\n                   <div className=\"field-group\">\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select \r\n                                name=\"uf\" \r\n                                id=\"uf\" \r\n                                value={selectedUf} \r\n                                onChange={handleSelectedUf}\r\n                            >\r\n                                <option value=\"0\">Selectione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select \r\n                                name=\"city\" \r\n                                id=\"city\"\r\n                                value={selectedCity}\r\n                                onChange={handleSelectedcity}\r\n                            >\r\n                                <option value=\"0\">Selectione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                   </div>\r\n\r\n               </fieldset>\r\n\r\n               <fieldset>\r\n                   <legend>\r\n                       <h2>√çtems de coleta</h2>\r\n                       <span>Selecione um ou mais √≠tens abaixo</span>\r\n                   </legend>\r\n\r\n                   <ul className=\"items-grid\">\r\n\r\n                        {items.map(item => (\r\n                            <li \r\n                                key={item.id} \r\n                                onClick={() => handleSelectItem(item.id)} \r\n                                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n                            >\r\n                                <img src={item.image_url} alt={item.title}/>\r\n                                <span>{item.title}</span>\r\n                            </li>\r\n                        ))}\r\n\r\n                   </ul>\r\n               </fieldset>\r\n\r\n               <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n           </form>\r\n\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreatePoint","import React from 'react'\r\nimport { Route, BrowserRouter} from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport CreatePoint from './pages/CreatePoint'\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Route component={Home} path=\"/\" exact />\r\n            <Route component={CreatePoint} path=\"/create-point\" />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react';\nimport './App.css';\nimport Routes from './routes';\n\n\nfunction App() {\n\n  return (\n     <Routes />\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}